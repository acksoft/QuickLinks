{"version":3,"sources":["webparts/quickLinks/QuickLinksWebPart.ts"],"names":[],"mappings":"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","file":"webparts/quickLinks/QuickLinksWebPart.js","sourcesContent":["import {\r\n  Version,\r\n  Environment,\r\n  EnvironmentType\r\n} from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\nimport styles from './QuickLinks.module.scss';\r\nimport * as strings from 'quickLinksStrings';\r\nimport { IQuickLinksWebPartProps } from './IQuickLinksWebPartProps';\r\nimport 'jquery';\r\nimport pnp from 'sp-pnp-js';\r\n\r\nexport default class QuickLinksWebPart extends BaseClientSideWebPart<IQuickLinksWebPartProps> {\r\n\r\n  public render(): void {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      // this.domElement.innerHTML = this.getLinksHTML();\r\n      this.domElement.innerHTML = `\r\n      <div class=\"${styles.quickLinks}\">\r\n        <div class=\"${styles.container}\">\r\n          <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n            <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n              <span class=\"ms-font-xl ms-fontColor-white\">Quick Links (Running Locally)</span>\r\n              <p class=\"ms-font-l ms-fontColor-white\">${escape(this.properties.LinkSet)}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n    }\r\n    else if (Environment.type === EnvironmentType.SharePoint ||\r\n      Environment.type === EnvironmentType.ClassicSharePoint) {\r\n      this.domElement.innerHTML = `\r\n      <div class=\"${styles.quickLinks}\">\r\n        <div class=\"${styles.container}\">\r\n          <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n            <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n              <span class=\"ms-font-xl ms-fontColor-white\">Quick Links (Running in SPO)</span>\r\n              <p class=\"ms-font-l ms-fontColor-white\">${escape(this.properties.LinkSet)} Links</p>\r\n              <div id=\"qlinks\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n\r\n      $('#qlinks', this.domElement).html(this.getLinkData());\r\n    }\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  private getLinkData(): string {\r\n    let linkData: string = '';\r\n    let linkFilter: string = `LinkSet eq '${this.properties.LinkSet}' and Visible eq 1`;\r\n\r\n    pnp.sp.web.lists.getByTitle('QuickLinks').items.filter(linkFilter).orderBy(\"Sequence\").get().then(r => {\r\n\r\n      let row: string = '';\r\n\r\n      // start the unordered list\r\n      linkData = \"<ul>\";\r\n\r\n      // loop through the returned items to create the links\r\n      r.array.forEach(item => {\r\n        row += \"<li><a href='\";\r\n        row += item.URL.Url;\r\n        row += \"'\";\r\n\r\n        // if external, open in new window/tab\r\n        if (item.External) {\r\n          row += \" target='_blank'\";\r\n        }\r\n\r\n        // if there are comments, turn them into a tooltip\r\n        if (item.Comments.Length > 0) {\r\n          row += \" title='\";\r\n          row += item.Comments;\r\n          row += \"'\";\r\n        }\r\n\r\n        //set the link text\r\n        row += \">\";\r\n        row += item.URL.Description;\r\n\r\n        // if extnernal, add the indicator icon\r\n        if (item.External) {\r\n          row += \" <i class='ms-Icon ms-Icon--OpenInNewWindow' aria-hidden='true'></i>\";\r\n        }\r\n\r\n        // close the link\r\n        row += \"</a></li>\";\r\n\r\n        // add the link to the list of links\r\n        linkData += row;\r\n        row = '';\r\n      });\r\n\r\n      // close the link list\r\n      linkData += \"</ul>\";\r\n    });\r\n\r\n    return linkData;\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('LinkSet', {\r\n                  label: strings.DescriptionFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}